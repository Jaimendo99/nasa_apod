name: Python application CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for SonarQube analysis
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests with pytest and generate coverage report
        run: |
          pytest --cov=. --cov-report=xml:coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  build:
    runs-on: ubuntu-latest
    needs: test # This job depends on the 'test' job passing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (para escanear)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          tags: nasa_apod_app_temp:latest # Etiqueta temporal para el escaneo
          outputs: type=docker,dest=/tmp/image.tar # Guarda la imagen localmente para Trivy

      - name: Run Trivy vulnerability scan on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          input: /tmp/image.tar # Escanea la imagen localmente
          format: "table" # Formato de salida legible
          output: "trivy-results.txt" # Guarda los resultados en un archivo
          exit-code: "0" # Falla si encuentra vulnerabilidades de severidad CR√çTICA o ALTA.
          severity: "HIGH,CRITICAL"
        continue-on-error: false # Hazlo 'true' al principio, 'false' para forzar la seguridad.

      - name: Upload Trivy Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.txt

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false # Only build, don't push yet
          tags: |
            ghcr.io/jaimendo99/nasa_apod:latest
            ghcr.io/jaimendo99/nasa_apod:${{ github.sha }}

  deploy_image:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job passing
    if: github.ref == 'refs/heads/main' # Only deploy on pushes to main branch
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true # Push the image
          tags: |
            ghcr.io/jaimendo99/nasa_apod:latest
            ghcr.io/jaimendo99/nasa_apod:${{ github.sha }}
  deploy_service:
    runs-on: ubuntu-latest
    needs: deploy_image
    steps:
      - name: Notify deployment via Coolify
        run: |
          curl -X GET "http://62.146.226.103:8000/api/v1/deploy?uuid=${{ secrets.RESOURCE_UUID }}&force=false" \
          -H "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
